<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>廖雪峰java教程（一）</title>
      <link href="/2022/06/14/code/java/basic_java1/"/>
      <url>/2022/06/14/code/java/basic_java1/</url>
      
        <content type="html"><![CDATA[<h1 id="1-java快速入门"><a href="#1-java快速入门" class="headerlink" title="1.  java快速入门"></a>1.  java快速入门</h1><p>Java是将代码编译成一种“字节码”，它类似于抽象的CPU指令，然后，针对不同平台编写虚拟机，不同平台的虚拟机负责加载字节码并执行，这样就实现了“一次编写，到处运行”的效果。当然，这是针对Java开发者而言。对于虚拟机，需要为每个平台分别开发。为了保证不同平台、不同公司开发的虚拟机都能正确执行Java字节码，SUN公司制定了一系列的Java虚拟机规范。从实践的角度看，JVM的兼容性做得非常好，低版本的Java字节码完全可以正常运行在高版本的JVM上。</p><p><strong>参考资料：</strong></p><p><strong>1、</strong>vscode java终端输出乱码：<a href="https://blog.csdn.net/weixin_44489823/article/details/104785029">https://blog.csdn.net/weixin_44489823/article/details/104785029</a></p><p><strong>2、</strong>VSCode配置基于java + LeetCode环境：<a href="https://blog.csdn.net/qq_33934427/article/details/105912963">https://blog.csdn.net/qq_33934427/article/details/105912963</a></p><p><strong>3、</strong>liaoxuefeng：<code>git clone git@gitee.com:liaoxuefeng/learn-java.git</code></p><h2 id="1-1-instrument"><a href="#1-1-instrument" class="headerlink" title="1.1  instrument"></a>1.1  instrument</h2><h3 id="1-1-0-安装"><a href="#1-1-0-安装" class="headerlink" title="1.1.0  安装"></a>1.1.0  安装</h3><p>找到javaSE，JDK Download</p><p>设置一个<code>JAVA_HOME</code>的环境变量</p><p>然后，把<code>JAVA_HOME</code>的<code>bin</code>目录附加到系统环境变量<code>PATH</code>上。在Windows下，它长这样：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Path=%JAVA_HOME%\bin;&lt;现有的其他路径&gt;</span><br></pre></td></tr></table></figure><p>bin目录下的可执行文件：</p><ul><li>java：这个可执行程序其实就是JVM（虚拟机），运行Java程序，就是启动JVM，然后让JVM执行指定的编译后的代码；</li><li>javac：这是Java的编译器，它用于把Java源码文件（以<code>.java</code>后缀结尾）编译为Java字节码文件（以<code>.class</code>后缀结尾）；</li><li>jar：用于把一组<code>.class</code>文件打包成一个<code>.jar</code>文件，便于发布；</li><li>javadoc：用于从Java源码中自动提取注释并生成文档；</li><li>jdb：Java调试器，用于开发阶段的运行调试。</li></ul><h3 id="1-1-1-jd-gui"><a href="#1-1-1-jd-gui" class="headerlink" title="1.1.1  jd-gui"></a>1.1.1  jd-gui</h3><p>资源链接：<a href="https://www.cr173.com/soft/1096707.html">https://www.cr173.com/soft/1096707.html</a></p><p>JD-GUI是一个独立的图形实用程序，显示<code>&quot;.class&quot;</code>文件的Java源代码。 </p><h3 id="1-1-2-jad"><a href="#1-1-2-jad" class="headerlink" title="1.1.2  jad"></a>1.1.2  jad</h3><p><a href="https://varaneckas.com/jad/">https://varaneckas.com/jad/</a></p><p><img src="/2022/06/14/code/java/basic_java1/4.png" alt="1"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">jad -o -r -s java -d src demo/**/*.class</span><br></pre></td></tr></table></figure><h2 id="1-2-JAVA语言基础"><a href="#1-2-JAVA语言基础" class="headerlink" title="1.2  JAVA语言基础"></a>1.2  JAVA语言基础</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">helloworld</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="comment">// void是方法的返回类型</span></span><br><span class="line">        System.out.println(<span class="string">&quot;hello world&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>一个java文件必须含有主函数，在eclipse或其他编译器中，还需要public class命名与文件名一致才可以正确运行JAVA，而IDEA可以自动识别（IDEA牛逼！)</p><h3 id="1-2-1-声明变量"><a href="#1-2-1-声明变量" class="headerlink" title="1.2.1  声明变量"></a>1.2.1  声明变量</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">final double PI = 3.14159;  //声明double型常量PI并赋值</span><br><span class="line">final boolean BOOL = true;  //声明boolean型常量BOOL并赋值</span><br><span class="line"></span><br><span class="line">常量在定义时进行初始化后就不可再次赋值，再次赋值会导致编译错误。</span><br></pre></td></tr></table></figure><h3 id="1-2-2-整数-浮点类型"><a href="#1-2-2-整数-浮点类型" class="headerlink" title="1.2.2  整数/浮点类型"></a>1.2.2  整数/浮点类型</h3><table><thead><tr><th align="left">数据类型</th><th align="left">字节</th><th align="left">长度</th><th align="left">取值范围</th></tr></thead><tbody><tr><td align="left">byte(字节)</td><td align="left">1字节</td><td align="left">8位</td><td align="left">-128～127</td></tr><tr><td align="left">short(短整形)</td><td align="left">2字节</td><td align="left">16位</td><td align="left">-32768～32767</td></tr><tr><td align="left">int(整形)</td><td align="left">4字节</td><td align="left">32位</td><td align="left">-2147483648～2147483647</td></tr><tr><td align="left">long(长整型)</td><td align="left">8字节</td><td align="left">64位</td><td align="left">-9223372036854775808～9223372036854775807</td></tr><tr><td align="left">float</td><td align="left">4字节</td><td align="left">32位</td><td align="left">1.4E-45～3.4028235E38</td></tr><tr><td align="left">double</td><td align="left">8字节</td><td align="left">64位</td><td align="left">4.9E-324～1.7976931348623157E308</td></tr></tbody></table><p><strong>注：</strong></p><p><strong>1、</strong>浮点数可表示的范围非常大，<code>float</code>类型可最大表示3.4x(10^38)，而<code>double</code>类型可最大表示1.79x(10^308)。</p><p><strong>2、</strong>使用float需注明，例如：<code>float f1=13.23f</code></p><p><strong>3、</strong>获取变量类型</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="type">float</span> <span class="variable">f1</span> <span class="operator">=</span> <span class="number">12.13f</span>;</span><br><span class="line"><span class="type">char</span> <span class="variable">a</span> <span class="operator">=</span> <span class="type">char</span> <span class="number">97</span>; <span class="comment">// java.lang.Character類封裝在一個對象的基本類型char值。</span></span><br><span class="line">System.out.println(getType(a));</span><br><span class="line">System.out.println(<span class="string">&quot;Hello Java!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getType</span><span class="params">(Object o)</span>&#123; <span class="comment">//获取变量类型方法</span></span><br><span class="line"><span class="keyword">return</span> o.getClass().toString(); <span class="comment">//使用int类型的getClass()方法</span></span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-2-2-1-整数"><a href="#1-2-2-1-整数" class="headerlink" title="1.2.2.1  整数"></a>1.2.2.1  整数</h4><p>整数的数值表示不但是精确的，而且整数运算永远是精确的，即使是除法也是精确的，因为两个整数相除只能得到结果的整数部分：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">int x = 12345 / 67; // 184</span><br></pre></td></tr></table></figure><p>特别注意：整数的除法对于除数为0时运行时将报错，但编译不会报错。</p><p>要特别注意，整数由于存在范围限制，如果计算结果超出了范围，就会产生溢出，而溢出不会出错，却会得到一个奇怪的结果：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> <span class="number">2147483640</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">y</span> <span class="operator">=</span> <span class="number">15</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> x + y;</span><br><span class="line">        System.out.println(sum); <span class="comment">// -2147483641</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>要解决上面的问题，可以把<code>int</code>换成<code>long</code>类型，由于<code>long</code>可表示的整型范围更大，所以结果就不会溢出：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">long</span> <span class="variable">x</span> <span class="operator">=</span> <span class="number">2147483640</span>;</span><br><span class="line"><span class="type">long</span> <span class="variable">y</span> <span class="operator">=</span> <span class="number">15</span>;</span><br><span class="line"><span class="type">long</span> <span class="variable">sum</span> <span class="operator">=</span> x + y;</span><br><span class="line">System.out.println(sum); <span class="comment">// 2147483655</span></span><br></pre></td></tr></table></figure><p>超出范围的强制转型会得到错误的结果，原因是转型时，<code>int</code>的两个高位字节直接被扔掉，仅保留了低位的两个字节：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">i1</span> <span class="operator">=</span> <span class="number">1234567</span>;</span><br><span class="line">        <span class="type">short</span> <span class="variable">s1</span> <span class="operator">=</span> (<span class="type">short</span>) i1; <span class="comment">// -10617</span></span><br><span class="line">        System.out.println(s1);</span><br><span class="line">        <span class="type">int</span> <span class="variable">i2</span> <span class="operator">=</span> <span class="number">12345678</span>;</span><br><span class="line">        <span class="type">short</span> <span class="variable">s2</span> <span class="operator">=</span> (<span class="type">short</span>) i2; <span class="comment">// 24910</span></span><br><span class="line">        System.out.println(s2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-2-2-2-浮点数"><a href="#1-2-2-2-浮点数" class="headerlink" title="1.2.2.2  浮点数"></a>1.2.2.2  浮点数</h4><p>浮点数运算和整数运算相比，只能进行加减乘除这些数值计算，不能做位运算和移位运算。</p><p>在计算机中，浮点数虽然表示的范围大，但是，浮点数有个非常重要的特点，就是浮点数常常无法精确表示。</p><p>因为浮点数常常无法精确表示，因此，浮点数运算会产生误差：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">double</span> <span class="variable">x</span> <span class="operator">=</span> <span class="number">1.0</span> / <span class="number">10</span>;</span><br><span class="line">        <span class="type">double</span> <span class="variable">y</span> <span class="operator">=</span> <span class="number">1</span> - <span class="number">9.0</span> / <span class="number">10</span>;</span><br><span class="line">        <span class="comment">// 观察x和y是否相等:</span></span><br><span class="line">        System.out.println(x);</span><br><span class="line">        System.out.println(y);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 0.1</span></span><br><span class="line"><span class="comment">// 0.09999999999999998</span></span><br></pre></td></tr></table></figure><p>由于浮点数存在运算误差，所以比较两个浮点数是否相等常常会出现错误的结果。正确的比较方法是判断两个浮点数之差的绝对值是否小于一个很小的数：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 比较x和y是否相等，先计算其差的绝对值:</span></span><br><span class="line"><span class="type">double</span> <span class="variable">r</span> <span class="operator">=</span> Math.abs(x - y);</span><br><span class="line"><span class="comment">// 再判断绝对值是否足够小:</span></span><br><span class="line"><span class="keyword">if</span> (r &lt; <span class="number">0.00001</span>) &#123;</span><br><span class="line">    <span class="comment">// 可以认为相等</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 不相等</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果参与运算的两个数其中一个是整型，另一个是浮点型，那么整型可以自动提升到浮点型：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> <span class="number">5</span>;</span><br><span class="line">        <span class="type">double</span> <span class="variable">d</span> <span class="operator">=</span> <span class="number">1.2</span> + <span class="number">24.0</span> / n; <span class="comment">// 6.0</span></span><br><span class="line">        System.out.println(d);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在一个复杂的四则运算中，两个整数的运算不会出现自动提升的情况。例如：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">double</span> <span class="variable">d</span> <span class="operator">=</span> <span class="number">1.2</span> + <span class="number">24</span> / <span class="number">5</span>; <span class="comment">// 5.2</span></span><br></pre></td></tr></table></figure><p>溢出</p><p>整数运算在除数为<code>0</code>时会报错，而浮点数运算在除数为<code>0</code>时，不会报错，但会返回几个特殊值：</p><ul><li><code>NaN</code>表示Not a Number</li><li><code>Infinity</code>表示无穷大</li><li><code>-Infinity</code>表示负无穷大</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">double</span> <span class="variable">d1</span> <span class="operator">=</span> <span class="number">0.0</span> / <span class="number">0</span>; <span class="comment">// NaN</span></span><br><span class="line"><span class="type">double</span> <span class="variable">d2</span> <span class="operator">=</span> <span class="number">1.0</span> / <span class="number">0</span>; <span class="comment">// Infinity</span></span><br><span class="line"><span class="type">double</span> <span class="variable">d3</span> <span class="operator">=</span> -<span class="number">1.0</span> / <span class="number">0</span>; <span class="comment">// -Infinity</span></span><br></pre></td></tr></table></figure><p>可以将浮点数强制转型为整数。在转型时，浮点数的小数部分会被丢掉。如果转型后超过了整型能表示的最大范围，将返回整型的最大值。例如：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">n1</span> <span class="operator">=</span> (<span class="type">int</span>) <span class="number">12.3</span>; <span class="comment">// 12</span></span><br><span class="line"><span class="type">int</span> <span class="variable">n2</span> <span class="operator">=</span> (<span class="type">int</span>) <span class="number">12.7</span>; <span class="comment">// 12</span></span><br><span class="line"><span class="type">int</span> <span class="variable">n2</span> <span class="operator">=</span> (<span class="type">int</span>) -<span class="number">12.7</span>; <span class="comment">// -12</span></span><br><span class="line"><span class="type">int</span> <span class="variable">n3</span> <span class="operator">=</span> (<span class="type">int</span>) (<span class="number">12.7</span> + <span class="number">0.5</span>); <span class="comment">// 13</span></span><br><span class="line"><span class="type">int</span> <span class="variable">n4</span> <span class="operator">=</span> (<span class="type">int</span>) <span class="number">1.2e20</span>; <span class="comment">// 2147483647</span></span><br></pre></td></tr></table></figure><p>如果要进行四舍五入，可以对浮点数加上0.5再强制转型：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">double</span> <span class="variable">d</span> <span class="operator">=</span> <span class="number">2.6</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> (<span class="type">int</span>) (d + <span class="number">0.5</span>);</span><br><span class="line">        System.out.println(n);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-2-2-3-demo"><a href="#1-2-2-3-demo" class="headerlink" title="1.2.2.3  demo"></a>1.2.2.3  demo</h4><h5 id="1-2-2-3-1-编写一个计算BMI指数的JAVA程序"><a href="#1-2-2-3-1-编写一个计算BMI指数的JAVA程序" class="headerlink" title="1.2.2.3.1  编写一个计算BMI指数的JAVA程序"></a>1.2.2.3.1  编写一个计算BMI指数的JAVA程序</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BMIexponent</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">double</span> <span class="variable">height</span> <span class="operator">=</span> <span class="number">1.72</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">weight</span> <span class="operator">=</span> <span class="number">70</span>;</span><br><span class="line">        <span class="type">double</span> <span class="variable">exponent</span> <span class="operator">=</span> weight / (height * height);</span><br><span class="line">        System.out.println(<span class="string">&quot;您的身高为&quot;</span>+height);</span><br><span class="line">        System.out.println(<span class="string">&quot;您的体重为&quot;</span>+weight);</span><br><span class="line">        System.out.println(<span class="string">&quot;您的BMI指数为&quot;</span>+exponent);</span><br><span class="line">        System.out.println(<span class="string">&quot;您的体重属于&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (exponent &lt; <span class="number">18.5</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;体重过轻&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (exponent &gt;= <span class="number">18.5</span> &amp;&amp; exponent &lt; <span class="number">24.9</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;正常范围&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (exponent &gt;= <span class="number">24.9</span> &amp;&amp; exponent &lt; <span class="number">29.9</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;体重过重&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (exponent &gt; <span class="number">29.9</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;肥胖&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="1-2-2-3-2-温度单位转换"><a href="#1-2-2-3-2-温度单位转换" class="headerlink" title="1.2.2.3.2  温度单位转换"></a>1.2.2.3.2  温度单位转换</h5><p><code>将37摄氏度转换为整形的华氏度。华氏度=32+摄氏度*1.8</code></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Fahrenheit</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> <span class="number">37</span>;</span><br><span class="line">        <span class="type">double</span> <span class="variable">fahrenheit</span> <span class="operator">=</span> <span class="number">32</span> + (c * <span class="number">1.8</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;摄氏度：&quot;</span> + c + <span class="string">&quot;转化为华氏度为：&quot;</span> + fahrenheit);</span><br><span class="line">        <span class="comment">// 整型可以和字符串拼接在一起吗？</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="1-2-2-3-3-用bool判断用户输入的值"><a href="#1-2-2-3-3-用bool判断用户输入的值" class="headerlink" title="1.2.2.3.3  用bool判断用户输入的值"></a>1.2.2.3.3  用bool判断用户输入的值</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">loginservice</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">passwd</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in); <span class="comment">//创建扫描器，获取控制台输入的值</span></span><br><span class="line">        System.out.println(<span class="string">&quot;请输入密码&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">password</span> <span class="operator">=</span> passwd.nextInt(); <span class="comment">//将用户输入的值给password</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">result</span> <span class="operator">=</span> (password == <span class="number">123456</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;您输入的密码是：&quot;</span> + result + <span class="string">&quot;的&quot;</span>);</span><br><span class="line">        passwd.close(); <span class="comment">//关闭扫描器</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="1-2-2-3-4-模拟一个简单的计算器"><a href="#1-2-2-3-4-模拟一个简单的计算器" class="headerlink" title="1.2.2.3.4  模拟一个简单的计算器"></a>1.2.2.3.4  模拟一个简单的计算器</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">operator</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入两个数字并用空格隔开：&quot;</span>);</span><br><span class="line">        <span class="type">double</span> <span class="variable">num1</span> <span class="operator">=</span> sc.nextDouble();</span><br><span class="line">        <span class="comment">// sc.nextDouble();等待输入一个double类型的数值。</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">num2</span> <span class="operator">=</span> sc.nextDouble();</span><br><span class="line">        System.out.println(<span class="string">&quot;和&quot;</span> + (num1 + num2));</span><br><span class="line">        System.out.println(<span class="string">&quot;差&quot;</span> + (num1 - num2));</span><br><span class="line">        System.out.println(<span class="string">&quot;商&quot;</span> + (num1 / num2));</span><br><span class="line">        System.out.println(<span class="string">&quot;积&quot;</span> + (num1 * num2));</span><br><span class="line">        System.out.println(<span class="string">&quot;余数&quot;</span> + (num1 % num2));</span><br><span class="line">        sc.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-2-3-字符和字符串"><a href="#1-2-3-字符和字符串" class="headerlink" title="1.2.3  字符和字符串"></a>1.2.3  字符和字符串</h3><p>在Java中，字符和字符串是两个不同的类型。</p><p>字符类型<code>char</code>是基本数据类型，它是<code>character</code>的缩写，一个<code>char</code>保存一个Unicode字符。</p><p>因为Java在内存中总是使用Unicode表示字符，所以，一个英文字符和一个中文字符都用一个<code>char</code>类型表示，它们都占用两个字节。要显示一个字符的Unicode编码，只需将<code>char</code>类型直接赋值给<code>int</code>类型即可：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">n1</span> <span class="operator">=</span> <span class="string">&#x27;A&#x27;</span>; <span class="comment">// 字母&quot;A&quot;的Unicodde编码是65</span></span><br><span class="line"><span class="type">int</span> <span class="variable">n2</span> <span class="operator">=</span> <span class="string">&#x27;中&#x27;</span>; <span class="comment">// 汉字&quot;中&quot;的Unicode编码是20013</span></span><br></pre></td></tr></table></figure><p>还可以直接用转义字符<code>\u</code>+Unicode编码来表示一个字符：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 注意是十六进制:</span></span><br><span class="line"><span class="type">char</span> <span class="variable">c3</span> <span class="operator">=</span> <span class="string">&#x27;\u0041&#x27;</span>; <span class="comment">// &#x27;A&#x27;，因为十六进制0041 = 十进制65</span></span><br><span class="line"><span class="type">char</span> <span class="variable">c4</span> <span class="operator">=</span> <span class="string">&#x27;\u4e2d&#x27;</span>; <span class="comment">// &#x27;中&#x27;，因为十六进制4e2d = 十进制20013</span></span><br></pre></td></tr></table></figure><p>从Java 13开始，字符串可以用<code>&quot;&quot;&quot;...&quot;&quot;&quot;</code>表示多行字符串（Text Blocks）了。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">                   SELECT * FROM</span></span><br><span class="line"><span class="string">                     users</span></span><br><span class="line"><span class="string">                   WHERE id &gt; 100</span></span><br><span class="line"><span class="string">                   ORDER BY name DESC</span></span><br><span class="line"><span class="string">                   &quot;&quot;&quot;</span>;</span><br><span class="line">        System.out.println(s);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>字符串的不可变是指字符串内容不可变。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> <span class="string">&quot;hello&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">t</span> <span class="operator">=</span> s;</span><br><span class="line">        s = <span class="string">&quot;world&quot;</span>;</span><br><span class="line">        System.out.println(t); <span class="comment">// t是&quot;hello&quot;还是&quot;world&quot;?</span></span><br><span class="line">        <span class="comment">// hello</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意要区分空值<code>null</code>和空字符串<code>&quot;&quot;</code>，空字符串是一个有效的字符串对象，它不等于<code>null</code>。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> a=<span class="number">72</span>;</span><br><span class="line">        <span class="type">int</span> b=<span class="number">105</span>;</span><br><span class="line">        <span class="type">int</span> c=<span class="number">65281</span>;</span><br><span class="line">        String s=<span class="string">&quot;&quot;</span>+(<span class="type">char</span>)a+(<span class="type">char</span>)b+(<span class="type">char</span>)c;</span><br><span class="line">        System.out.println(s);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-2-4-数组类型"><a href="#1-2-4-数组类型" class="headerlink" title="1.2.4  数组类型"></a>1.2.4  数组类型</h3><p>Java的数组有几个特点：</p><ul><li>数组所有元素初始化为默认值，整型都是<code>0</code>，浮点型是<code>0.0</code>，布尔型是<code>false</code>；</li><li>数组一旦创建后，大小就不可改变。</li></ul><p>初始化数组</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">形式<span class="number">1</span>：</span><br><span class="line"><span class="type">int</span>[] ns = <span class="keyword">new</span> <span class="title class_">int</span>[] &#123; <span class="number">68</span>, <span class="number">79</span>, <span class="number">91</span>, <span class="number">85</span>, <span class="number">62</span> &#125;;</span><br><span class="line"></span><br><span class="line">形式<span class="number">2</span>：</span><br><span class="line"><span class="type">int</span>[] ns = &#123; <span class="number">68</span>, <span class="number">79</span>, <span class="number">91</span>, <span class="number">85</span>, <span class="number">62</span> &#125;;</span><br><span class="line"></span><br><span class="line">形式<span class="number">3</span>：</span><br><span class="line"><span class="type">int</span>[] ns = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">5</span>];</span><br><span class="line">ns[<span class="number">0</span>] = <span class="number">68</span>;</span><br><span class="line">    </span><br><span class="line">ns.length</span><br></pre></td></tr></table></figure><h3 id="1-2-5-运算符"><a href="#1-2-5-运算符" class="headerlink" title="1.2.5  运算符"></a>1.2.5  运算符</h3><h4 id="1-2-5-1-位运算符"><a href="#1-2-5-1-位运算符" class="headerlink" title="1.2.5.1  位运算符"></a>1.2.5.1  位运算符</h4><table><thead><tr><th align="left">运算符</th><th align="left">含义</th></tr></thead><tbody><tr><td align="left">&amp;</td><td align="left">与</td></tr><tr><td align="left">｜</td><td align="left">或</td></tr><tr><td align="left">～</td><td align="left">取反</td></tr><tr><td align="left">^</td><td align="left">异或</td></tr><tr><td align="left">&lt;&lt;</td><td align="left">左移位</td></tr><tr><td align="left">&gt;&gt;</td><td align="left">右移位</td></tr><tr><td align="left">&gt;&gt;&gt;</td><td align="left">无符号右移位</td></tr></tbody></table><hr><h4 id="1-2-5-2-复合赋值运算符"><a href="#1-2-5-2-复合赋值运算符" class="headerlink" title="1.2.5.2  复合赋值运算符"></a>1.2.5.2  复合赋值运算符</h4><p><code>+=</code> </p><p><code>a+=b</code> </p><p><code>a=a+b</code> 其他等同</p><hr><h4 id="1-2-5-3-三元运算符"><a href="#1-2-5-3-三元运算符" class="headerlink" title="1.2.5.3  三元运算符"></a>1.2.5.3  三元运算符</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">boolean</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">20</span> &lt; <span class="number">45</span> ? <span class="literal">true</span> : <span class="literal">false</span>;</span><br></pre></td></tr></table></figure><p>即运算结果为真返回ture，为假返回false，等价于if else语句</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">boolean</span> a;</span><br><span class="line"><span class="keyword">if</span> (<span class="number">20</span> &lt; <span class="number">45</span>)</span><br><span class="line">a = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  a = <span class="literal">false</span>;</span><br></pre></td></tr></table></figure><hr><h4 id="1-2-5-4-运算优先级"><a href="#1-2-5-4-运算优先级" class="headerlink" title="1.2.5.4  运算优先级"></a>1.2.5.4  运算优先级</h4><ol><li><code>()</code></li><li><code>+ -</code> //此为正负号</li><li><code>++ -- !</code></li><li><code>* / %</code></li><li><code>+ -</code></li><li><code>&gt;&gt; &lt;&lt; &gt;&gt;&gt;</code></li><li><code>&gt; &lt; = &gt;= &lt;=</code></li><li><code>== !=</code></li><li><code>&amp;</code></li><li><code>^</code></li><li><code>|</code></li><li><code>&amp;&amp;</code></li><li><code>||</code></li><li><code>? :</code></li><li><code>=</code> //赋值</li></ol><h2 id="1-3-流程控制"><a href="#1-3-流程控制" class="headerlink" title="1.3  流程控制"></a>1.3  流程控制</h2><h3 id="1-3-1-判断"><a href="#1-3-1-判断" class="headerlink" title="1.3.1  判断"></a>1.3.1  判断</h3><h4 id="1-3-1-1-IF语句"><a href="#1-3-1-1-IF语句" class="headerlink" title="1.3.1.1  IF语句"></a>1.3.1.1  IF语句</h4><h4 id="1-3-1-2-switch语句"><a href="#1-3-1-2-switch语句" class="headerlink" title="1.3.1.2  switch语句"></a>1.3.1.2  switch语句</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">switch_study</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入成绩：&quot;</span>);</span><br><span class="line">        <span class="type">int</span> grade=sc.nextInt();</span><br><span class="line">        <span class="keyword">switch</span> (grade)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;优&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;良&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;中&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;差&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;无效&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        sc.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-3-2-循环"><a href="#1-3-2-循环" class="headerlink" title="1.3.2  循环"></a>1.3.2  循环</h3><h4 id="1-3-2-1-WHILE"><a href="#1-3-2-1-WHILE" class="headerlink" title="1.3.2.1  WHILE"></a>1.3.2.1  WHILE</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">xunhuan</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span> (a&gt;<span class="number">5</span>)&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;ended&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            a = a + <span class="number">1</span>;</span><br><span class="line">            System.out.println(a);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-3-2-2-do-while"><a href="#1-3-2-2-do-while" class="headerlink" title="1.3.2.2  do while"></a>1.3.2.2  do while</h4><p><code>while</code>先判断再执行，<code>do-while</code>先执行后判断 </p><p><strong>demo1：</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">do_while</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> <span class="number">11</span>;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            System.out.println(index);</span><br><span class="line">            index = index + <span class="number">1</span>; <span class="comment">// 这里怎么会是 +1 呢</span></span><br><span class="line">        &#125; <span class="keyword">while</span>(index &lt;= <span class="number">10</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;DONE.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 11</span></span><br><span class="line"><span class="comment">// DONE.</span></span><br></pre></td></tr></table></figure><p><strong>demo2：</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">do_while</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入密码：&quot;</span>);</span><br><span class="line">        String password;</span><br><span class="line">        <span class="keyword">do</span>&#123;</span><br><span class="line">            password = sc.nextLine();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(!<span class="string">&quot;45634351&quot;</span>.equals(password));<span class="comment">//equals()方法用于将字符串与指定的对象比较。这里必须加一个分号。</span></span><br><span class="line">        System.out.println(<span class="string">&quot;right&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-3-2-3-FOR"><a href="#1-3-2-3-FOR" class="headerlink" title="1.3.2.3  FOR"></a>1.3.2.3  FOR</h4><p><strong>demo1：</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FOR</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>;i &lt;= <span class="number">100</span>;i++)&#123;</span><br><span class="line">            sum+=i;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(sum);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>demo2：输出乘法口诀表</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Multiplication</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> i,j;</span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">1</span>; i &lt; <span class="number">10</span>; i ++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(j = <span class="number">1</span>; j &lt; <span class="number">10</span>; j ++)&#123;</span><br><span class="line">                System.out.println(j + <span class="string">&quot;*&quot;</span> + i + <span class="string">&quot;=&quot;</span> + i * j + <span class="string">&quot;\t&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-3-2-4-FOREACH"><a href="#1-3-2-4-FOREACH" class="headerlink" title="1.3.2.4  FOREACH"></a>1.3.2.4  FOREACH</h4><p>遍历数组</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FOR</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="type">int</span> arr[] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> x : arr)&#123;</span><br><span class="line">            System.out.println(x);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-3-3-跳转"><a href="#1-3-3-跳转" class="headerlink" title="1.3.3  跳转"></a>1.3.3  跳转</h3><h4 id="1-3-3-1-break"><a href="#1-3-3-1-break" class="headerlink" title="1.3.3.1  break"></a>1.3.3.1  break</h4><p>在java中 break 语句作用是跳出距离最近的循环，但是可以通过给循环命名的方式跳出指定的for循环。 </p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BREAK</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        a:<span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;i &lt; <span class="number">2</span>;i++)&#123;</span><br><span class="line">            b:<span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>;j &lt; <span class="number">10</span>;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span> (j == <span class="number">5</span>)&#123;</span><br><span class="line">                    <span class="keyword">break</span> a;</span><br><span class="line">                &#125;</span><br><span class="line">                System.out.println(j);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//0</span></span><br><span class="line"><span class="comment">//1</span></span><br><span class="line"><span class="comment">//2</span></span><br><span class="line"><span class="comment">//3</span></span><br><span class="line"><span class="comment">//4</span></span><br></pre></td></tr></table></figure><h4 id="1-3-3-2-continue"><a href="#1-3-3-2-continue" class="headerlink" title="1.3.3.2  continue"></a>1.3.3.2  continue</h4><p>跳到下一循环 </p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">test</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>;i &lt; <span class="number">20</span>;i ++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i % <span class="number">2</span> == <span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(i);<span class="comment">// 输出奇数</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1-4-实用用途"><a href="#1-4-实用用途" class="headerlink" title="1.4  实用用途"></a>1.4  实用用途</h2><h3 id="1-4-1-读取文件内容"><a href="#1-4-1-读取文件内容" class="headerlink" title="1.4.1  读取文件内容"></a>1.4.1  读取文件内容</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">readFileContent</span><span class="params">(String fileName)</span> &#123;</span><br><span class="line">    <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(fileName);</span><br><span class="line">    <span class="type">BufferedReader</span> <span class="variable">reader</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="type">StringBuffer</span> <span class="variable">sbf</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuffer</span>();</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        reader = <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">FileReader</span>(file));</span><br><span class="line">        String tempStr;</span><br><span class="line">        <span class="keyword">while</span> ((tempStr = reader.readLine()) != <span class="literal">null</span>) &#123;</span><br><span class="line">            sbf.append(tempStr);</span><br><span class="line">        &#125;</span><br><span class="line">        reader.close();</span><br><span class="line">        <span class="keyword">return</span> sbf.toString();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (reader != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                reader.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e1) &#123;</span><br><span class="line">                e1.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sbf.toString();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> code </tag>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>凡人修仙传</title>
      <link href="/2022/05/22/acg/fanren/"/>
      <url>/2022/05/22/acg/fanren/</url>
      
        <content type="html"><![CDATA[<h1 id="凡人修仙传"><a href="#凡人修仙传" class="headerlink" title="凡人修仙传"></a>凡人修仙传</h1><h2 id="51-再别天南51"><a href="#51-再别天南51" class="headerlink" title="51.  再别天南51"></a>51.  再别天南51</h2><p>​        这一集，陈巧倩那一段，完全能感受到女子的爱意柔情，什么修道长生似乎都不重要了，想起那首《女儿情》，说什么王权富贵，就问你女儿美不美，自己都想和陈巧倩找个地方厮守一生。<br>​        后面，大战画面，无数修士，场面震撼，如果自己是一名筑基修士，肯定泯然众生，当时的念头就是，自己应该修为有成，是元婴大修，坐看此番战争，翻手抹灭无数蝼蚁，主宰天地间。<br>​        两种截然相反的想法，都出现在你的一生中，就看你如何抉择，念头通达真不是那么容易的。小说里的心魔，读的时候觉得不过如此，现在通过动漫，看的感受颇深，我亦凡俗，绝非圣人。</p><p><img src="/2022/05/22/acg/fanren/1.png" alt="1"></p>]]></content>
      
      
      <categories>
          
          <category> acg </category>
          
      </categories>
      
      
        <tags>
            
            <tag> acg </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>起风了</title>
      <link href="/2022/05/15/acg/qifengl/"/>
      <url>/2022/05/15/acg/qifengl/</url>
      
        <content type="html"><![CDATA[<p>《起风了》（風立ちぬ）是日本吉卜力工作室动画导演宫崎骏以在月刊《Model Graphix》上连载的漫画所改编的同名电影动画。2013 年 7 月 20 日在日本公映。剧情为混合改编了零式舰上战斗机设计者堀越二郎的故事、以及小说家堀辰雄作品《起风了》的内容。 </p><p>風立ちぬ </p><p>纵有疾风起，人生不言弃 </p><p>起风了，唯有努力生存</p><p><img src="/2022/05/15/acg/qifengl/1.png" alt="1"></p><p><img src="/2022/05/15/acg/qifengl/4.png" alt="1"></p><p><img src="/2022/05/15/acg/qifengl/2.png" alt="1"></p><p><img src="/2022/05/15/acg/qifengl/3.png" alt="1"></p><p>将过多的财政收入投入军备竞赛而不去改造民生，国家未来的出路在哪里？ </p><p><img src="/2022/05/15/acg/qifengl/5.png" alt="1"></p><p><img src="/2022/05/15/acg/qifengl/6.png" alt="1"></p><p>谁曾见过风？</p><p>你我皆不曾。</p><p>但看木叶舞枝头，</p><p>便晓风穿过。</p><p>谁曾见过风？</p><p>你我皆不曾。</p><p>但看万木垂梢首，</p><p>便晓风吹过。</p><p>——克里斯蒂娜·罗塞蒂《谁曾见过风》</p><p><img src="/2022/05/15/acg/qifengl/7.png" alt="1"></p><p><img src="/2022/05/15/acg/qifengl/8.png" alt="1"></p><p><img src="/2022/05/15/acg/qifengl/9.png" alt="1"></p><p><img src="/2022/05/15/acg/qifengl/10.png" alt="1"></p><p><img src="/2022/05/15/acg/qifengl/11.png" alt="1"></p><p><img src="/2022/05/15/acg/qifengl/15.png" alt="1"></p><p>那个没有满座高朋的婚礼，落樱花瓣里的菜穗子，是真的<strong>妾拟将身嫁与，一生休</strong>。病痛摧残她的身体，她就抹上胭脂水粉，二郎从来只是称赞她的美丽，所以她到生命的尽头也还要如此粉饰自己，到终于连化妆都掩盖不了自己的病容时，她便依偎在二郎的怀里，轻轻摘掉了他的眼镜。然后她不辞而别，飘逝在那阵大风里。</p><p><img src="/2022/05/15/acg/qifengl/12.png" alt="1"></p><p>冥冥之中，感到远方有珍贵之物在逝去，怅然若失。</p><p><img src="/2022/05/15/acg/qifengl/13.png" alt="1"></p><p>走了，一个美得像风的人</p><p><img src="/2022/05/15/acg/qifengl/14.png" alt="1"></p><p>再看看这个时代背景，像极了我们曾经的样子，落后于西方，一直在追赶，虽然一些领域有所成就但还是有很多领域存在差距。然而日本走上了军国主义的道路，我们却一直在和平发展的道路上前进，这是一件很伟大的事。我们用J20战斗机去威慑敌人维护和平，然后用经济的手段，比如“一带一路”和RECP这种互利共赢的方式来发展彼此。这才是卡普罗尼和堀越二郎（电影中）向往的样子吧！</p>]]></content>
      
      
      <categories>
          
          <category> acg </category>
          
      </categories>
      
      
        <tags>
            
            <tag> acg </tag>
            
            <tag> 电影 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>五一之行</title>
      <link href="/2022/05/05/life/20220502marriage/"/>
      <url>/2022/05/05/life/20220502marriage/</url>
      
        <content type="html"><![CDATA[<p>人生第一次作为伴郎参加婚礼，婚礼前一天下午就过去了，主要是去贴喜字，拍视频，晚上接亲，没事干还和其他伴郎一起打王者荣耀，用镜拿了五杀，用孙尚香还拿了16.1的评分，哈哈。</p><p>酒店是在度假地，风景确实不错，地方真的很大。</p><p><img src="/2022/05/05/life/20220502marriage/2.jpg" alt="img"></p><p><img src="/2022/05/05/life/20220502marriage/3.jpg" alt="img"></p><p><img src="/2022/05/05/life/20220502marriage/4.jpg" alt="img"></p><p><img src="/2022/05/05/life/20220502marriage/5.jpg" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
